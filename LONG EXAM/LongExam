import java.util.Stack;
import java.util.LinkedList;

public class LongExam {
    public static void main(String[] args) throws Exception {

    // ARRAYS (50 points)
    System.out.println("======================================================");
    System.out.println("ARRAYS\n");
    // 1. Create an array of characters of your SURNAME.
       char[] surname = {'L', 'A', 'U', 'R', 'E', 'A', 'N', 'O'};
    
    // 2. Display each character of your SURNAME on each line.
        for(int i = 0; i < surname.length; i++) {
        System.out.println(surname[i]);
        }
        System.out.print("\n");
    // 3. Display the first character of your SURNAME.

        System.out.print("The first character of the surname is : ");
        System.out.println(surname[0]);
    
    // 4. Display the last character of your SURNAME.
        System.out.print("The last character of the surname is : ");    
        System.out.println(surname[7]);
        System.out.print("\n");
        
    // 5. Display the character of your SURNAME in reverse order.
        for(int n = surname.length-1; n >=0; n--) {
        System.out.println(surname[n]);
        }
        System.out.print("\n");
        
    // LINKED LIST (25 points)
    System.out.println("======================================================");
    System.out.println("LINKED LIST\n");
    // 1. Create a Linked list of the last six numbers of your STUDENT NUMBER.
        
        LinkedList<String> StudentNum= new LinkedList<>();
            
            StudentNum.add("1");
            StudentNum.add("0");
            StudentNum.add("5");
            StudentNum.add("1");
            StudentNum.add("8");
            StudentNum.add("3");
   
    // 2. Add an asterisk (*) to the head/front of the Linked list.
            StudentNum.addFirst("*");

    // 3. Add an asterisk (*) to the tail/end of the Linked list.
            StudentNum.addLast("*");

    // 4. Display the Linked list.
            System.out.println(StudentNum);
            System.out.print("\n");
    // 5. Display the last character of the Linked list.
            System.out.print("The last character in the linked list is: ");
            System.out.println(StudentNum.get(7));

    // 6. Replace the last character of the Linked list with the exclamation symbol (!).
            StudentNum.set(7, "!");

    // 7. Remove the first character of the Linked list.
            StudentNum.remove(0);
            System.out.print("\n");

    // 8. Display the LinkedList.
            System.out.print("Updated List: ");
            System.out.println(StudentNum);
            System.out.print("\n");

    // STACK (25 points)
    System.out.println("======================================================");
    System.out.println("STACK\n");
    // 1. Create a Stack of characters of your SURNAME.
    Stack<String> Surname = new Stack<>();
        
    Surname.push("L");
    Surname.push("A");
    Surname.push("U");
    Surname.push("R");
    Surname.push("E");
    Surname.push("A");
    Surname.push("N");
    Surname.push("O");

    // 2. Print the Stack.
    
    System.out.println(Surname);
    
    // 3. Add a "INF214" to the stack.
    
    Surname.push ("INF214");
    
    // 4. Print the Stack.
    System.out.print("Updated List: ");
    System.out.println(Surname);
    
    // 5. Remove "INF214".
    Surname.pop();
    
    // 6. Add "CCDATRCL-INF214".
    Surname.push ("CCDATRCL-INF214");
    
    // 7. Print the Stack.
    System.out.print("Updated List: ");
    System.out.println(Surname);

    System.out.print("\n");

    }
}
